{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/board.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./game-board/game-board.component\";\nfunction AppComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵlistener(\"dragstart\", function AppComponent_div_6_Template_div_dragstart_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const ship_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onDragStart($event, ship_r1.name));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ship_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ship_r1.name, \" \");\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(boardService) {\n      this.boardService = boardService;\n      this.title = 'battleship';\n      this.playerBoard = [];\n      this.opponentBoard = [];\n      this.boardSize = 7; // Set default board size to 7x7\n      this.ships = [{\n        name: 'Destroyer',\n        length: 2,\n        symbol: 'D'\n      }, {\n        name: 'Submarine',\n        length: 3,\n        symbol: 'S'\n      }, {\n        name: 'Battleship',\n        length: 4,\n        symbol: 'B'\n      }];\n      this.isPlayerTurn = true; // Track whose turn it is\n      this.isGameOver = false;\n      this.isPlayerVsPlayer = false; // Track if the game is player vs player\n    }\n\n    ngOnInit() {\n      this.resetGame();\n    }\n    initializeBoard() {\n      return this.boardService.initializeBoard(this.boardSize);\n    }\n    resetGame() {\n      this.playerBoard = this.initializeBoard();\n      this.opponentBoard = this.initializeBoard();\n      this.isPlayerTurn = true;\n      this.isGameOver = false;\n    }\n    startGame(isPlayerVsPlayer) {\n      this.isPlayerVsPlayer = isPlayerVsPlayer;\n      console.log(`Game started! Mode: ${isPlayerVsPlayer ? 'Player vs Player' : 'Player vs AI'}`);\n      // Populate opponent's board with ships for Player vs AI mode\n      if (!isPlayerVsPlayer) {\n        this.ships.forEach(ship => {\n          let placed = false;\n          while (!placed) {\n            const row = Math.floor(Math.random() * this.boardSize);\n            const col = Math.floor(Math.random() * this.boardSize);\n            const isHorizontal = Math.random() > 0.5;\n            if (this.boardService.validateShipPlacement(this.opponentBoard, row, col, ship.length, isHorizontal)) {\n              this.boardService.placeShip(this.opponentBoard, row, col, ship.length, isHorizontal, ship.symbol);\n              placed = true;\n            }\n          }\n        });\n      }\n    }\n    onPlayerCellClick(event) {\n      if (!this.isPlayerTurn || this.isGameOver) return;\n      if (this.opponentBoard[event.row][event.col] === '') {\n        this.opponentBoard[event.row][event.col] = 'X';\n        console.log(`Player attacked cell: (${event.row}, ${event.col})`);\n        this.checkGameOver();\n        this.isPlayerTurn = this.isPlayerVsPlayer ? !this.isPlayerTurn : false;\n        if (!this.isPlayerVsPlayer) {\n          this.aiTurn();\n        }\n      }\n    }\n    onOpponentCellClick(event) {\n      if (this.isPlayerVsPlayer && !this.isPlayerTurn && !this.isGameOver) {\n        if (this.playerBoard[event.row][event.col] === '') {\n          this.playerBoard[event.row][event.col] = 'X';\n          console.log(`Opponent attacked cell: (${event.row}, ${event.col})`);\n          this.checkGameOver();\n          this.isPlayerTurn = true;\n        }\n      }\n    }\n    onShipDropped(event) {\n      if (this.isGameOver) return;\n      const ship = this.ships.find(s => s.name === event.ship);\n      if (ship) {\n        const isHorizontal = true; // Default to horizontal placement for now\n        const board = this.isPlayerTurn ? this.playerBoard : this.opponentBoard;\n        if (this.boardService.validateShipPlacement(board, event.row, event.col, ship.length, isHorizontal)) {\n          this.boardService.placeShip(board, event.row, event.col, ship.length, isHorizontal, ship.symbol);\n          console.log(`${ship.name} placed at (${event.row}, ${event.col})`);\n        } else {\n          console.error('Invalid ship placement');\n        }\n      }\n    }\n    onDragStart(event, shipName) {\n      var _a;\n      (_a = event.dataTransfer) === null || _a === void 0 ? void 0 : _a.setData('text', shipName);\n      console.log(`Dragging ship: ${shipName}`);\n    }\n    aiTurn() {\n      if (this.isGameOver) return;\n      // Basic AI logic: randomly attack a cell on the player's board\n      let attempts = 0;\n      const maxAttempts = this.boardSize * this.boardSize;\n      let row, col;\n      do {\n        row = Math.floor(Math.random() * this.boardSize);\n        col = Math.floor(Math.random() * this.boardSize);\n        attempts++;\n      } while (this.playerBoard[row][col] !== '' && attempts < maxAttempts);\n      if (this.playerBoard[row][col] === '') {\n        this.playerBoard[row][col] = 'X';\n        console.log(`AI attacked cell: (${row}, ${col})`);\n        this.checkGameOver();\n      } else {\n        console.log('AI could not find a valid cell to attack.');\n      }\n      this.isPlayerTurn = true;\n    }\n    checkGameOver() {\n      // Check if all ships are hit on either board\n      const playerLost = this.playerBoard.flat().every(cell => cell === '' || cell === 'X');\n      const opponentLost = this.opponentBoard.flat().every(cell => cell === '' || cell === 'X');\n      if (playerLost || opponentLost) {\n        this.isGameOver = true;\n        console.log(playerLost ? 'Opponent wins!' : 'Player wins!');\n      }\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.BoardService));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 24,\n    vars: 5,\n    consts: [[1, \"app-container\"], [1, \"ship-container\"], [\"class\", \"ship\", \"draggable\", \"true\", 3, \"dragstart\", 4, \"ngFor\", \"ngForOf\"], [1, \"boards-container\"], [1, \"board-section\"], [3, \"board\", \"isPlayerBoard\", \"cellClick\", \"shipDropped\"], [3, \"board\", \"isPlayerBoard\", \"cellClick\"], [1, \"controls\"], [3, \"click\"], [\"draggable\", \"true\", 1, \"ship\", 3, \"dragstart\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Battleship Game\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"h2\");\n        i0.ɵɵtext(5, \"Ships\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, AppComponent_div_6_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"div\", 4)(9, \"h2\");\n        i0.ɵɵtext(10, \"Player's Board\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"app-game-board\", 5);\n        i0.ɵɵlistener(\"cellClick\", function AppComponent_Template_app_game_board_cellClick_11_listener($event) {\n          return ctx.onPlayerCellClick($event);\n        })(\"shipDropped\", function AppComponent_Template_app_game_board_shipDropped_11_listener($event) {\n          return ctx.onShipDropped($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"h2\");\n        i0.ɵɵtext(14, \"Opponent's Board\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"app-game-board\", 6);\n        i0.ɵɵlistener(\"cellClick\", function AppComponent_Template_app_game_board_cellClick_15_listener($event) {\n          return ctx.onOpponentCellClick($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_17_listener() {\n          return ctx.startGame(true);\n        });\n        i0.ɵɵtext(18, \"Start Player vs Player\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_19_listener() {\n          return ctx.startGame(false);\n        });\n        i0.ɵɵtext(20, \"Start Player vs AI\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_21_listener() {\n          return ctx.resetGame();\n        });\n        i0.ɵɵtext(22, \"Reset Game\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(23, \"router-outlet\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ships);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"board\", ctx.playerBoard)(\"isPlayerBoard\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"board\", ctx.opponentBoard)(\"isPlayerBoard\", false);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.RouterOutlet, i4.GameBoardComponent],\n    styles: [\"[_nghost-%COMP%] {\\n    font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n    font-size: 14px;\\n    color: #333;\\n    box-sizing: border-box;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n  }\\n\\n  h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%] {\\n    margin: 8px 0;\\n  }\\n\\n  p[_ngcontent-%COMP%] {\\n    margin: 0;\\n  }\\n\\n  .spacer[_ngcontent-%COMP%] {\\n    flex: 1;\\n  }\\n\\n  .toolbar[_ngcontent-%COMP%] {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    height: 60px;\\n    display: flex;\\n    align-items: center;\\n    background-color: #1976d2;\\n    color: white;\\n    font-weight: 600;\\n  }\\n\\n  .toolbar[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n    margin: 0 16px;\\n  }\\n\\n  .toolbar[_ngcontent-%COMP%]   #twitter-logo[_ngcontent-%COMP%] {\\n    height: 40px;\\n    margin: 0 8px;\\n  }\\n\\n  .toolbar[_ngcontent-%COMP%]   #youtube-logo[_ngcontent-%COMP%] {\\n    height: 40px;\\n    margin: 0 16px;\\n  }\\n\\n  .toolbar[_ngcontent-%COMP%]   #twitter-logo[_ngcontent-%COMP%]:hover, .toolbar[_ngcontent-%COMP%]   #youtube-logo[_ngcontent-%COMP%]:hover {\\n    opacity: 0.8;\\n  }\\n\\n  .content[_ngcontent-%COMP%] {\\n    display: flex;\\n    margin: 82px auto 32px;\\n    padding: 0 16px;\\n    max-width: 960px;\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n\\n  svg.material-icons[_ngcontent-%COMP%] {\\n    height: 24px;\\n    width: auto;\\n  }\\n\\n  svg.material-icons[_ngcontent-%COMP%]:not(:last-child) {\\n    margin-right: 8px;\\n  }\\n\\n  .card[_ngcontent-%COMP%]   svg.material-icons[_ngcontent-%COMP%]   path[_ngcontent-%COMP%] {\\n    fill: #888;\\n  }\\n\\n  .card-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-wrap: wrap;\\n    justify-content: center;\\n    margin-top: 16px;\\n  }\\n\\n  .card[_ngcontent-%COMP%] {\\n    border-radius: 4px;\\n    border: 1px solid #eee;\\n    background-color: #fafafa;\\n    height: 40px;\\n    width: 200px;\\n    margin: 0 8px 16px;\\n    padding: 16px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: center;\\n    align-items: center;\\n    transition: all 0.2s ease-in-out;\\n    line-height: 24px;\\n  }\\n\\n  .card-container[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:not(:last-child) {\\n    margin-right: 0;\\n  }\\n\\n  .card.card-small[_ngcontent-%COMP%] {\\n    height: 16px;\\n    width: 168px;\\n  }\\n\\n  .card-container[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:not(.highlight-card) {\\n    cursor: pointer;\\n  }\\n\\n  .card-container[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:not(.highlight-card):hover {\\n    transform: translateY(-3px);\\n    box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\\n  }\\n\\n  .card-container[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:not(.highlight-card):hover   .material-icons[_ngcontent-%COMP%]   path[_ngcontent-%COMP%] {\\n    fill: rgb(105, 103, 103);\\n  }\\n\\n  .card.highlight-card[_ngcontent-%COMP%] {\\n    background-color: #1976d2;\\n    color: white;\\n    font-weight: 600;\\n    border: none;\\n    width: auto;\\n    min-width: 30%;\\n    position: relative;\\n  }\\n\\n  .card.card.highlight-card[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n    margin-left: 60px;\\n  }\\n\\n  svg#rocket[_ngcontent-%COMP%] {\\n    width: 80px;\\n    position: absolute;\\n    left: -10px;\\n    top: -24px;\\n  }\\n\\n  svg#rocket-smoke[_ngcontent-%COMP%] {\\n    height: calc(100vh - 95px);\\n    position: absolute;\\n    top: 10px;\\n    right: 180px;\\n    z-index: -10;\\n  }\\n\\n  a[_ngcontent-%COMP%], a[_ngcontent-%COMP%]:visited, a[_ngcontent-%COMP%]:hover {\\n    color: #1976d2;\\n    text-decoration: none;\\n  }\\n\\n  a[_ngcontent-%COMP%]:hover {\\n    color: #125699;\\n  }\\n\\n  .terminal[_ngcontent-%COMP%] {\\n    position: relative;\\n    width: 80%;\\n    max-width: 600px;\\n    border-radius: 6px;\\n    padding-top: 45px;\\n    margin-top: 8px;\\n    overflow: hidden;\\n    background-color: rgb(15, 15, 16);\\n  }\\n\\n  .terminal[_ngcontent-%COMP%]::before {\\n    content: \\\"\\\\2022 \\\\2022 \\\\2022\\\";\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    height: 4px;\\n    background: rgb(58, 58, 58);\\n    color: #c2c3c4;\\n    width: 100%;\\n    font-size: 2rem;\\n    line-height: 0;\\n    padding: 14px 0;\\n    text-indent: 4px;\\n  }\\n\\n  .terminal[_ngcontent-%COMP%]   pre[_ngcontent-%COMP%] {\\n    font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;\\n    color: white;\\n    padding: 0 1rem 1rem;\\n    margin: 0;\\n  }\\n\\n  .circle-link[_ngcontent-%COMP%] {\\n    height: 40px;\\n    width: 40px;\\n    border-radius: 40px;\\n    margin: 8px;\\n    background-color: white;\\n    border: 1px solid #eeeeee;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    cursor: pointer;\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\\n    transition: 1s ease-out;\\n  }\\n\\n  .circle-link[_ngcontent-%COMP%]:hover {\\n    transform: translateY(-0.25rem);\\n    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\\n  }\\n\\n  footer[_ngcontent-%COMP%] {\\n    margin-top: 8px;\\n    display: flex;\\n    align-items: center;\\n    line-height: 20px;\\n  }\\n\\n  footer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n  }\\n\\n  .github-star-badge[_ngcontent-%COMP%] {\\n    color: #24292e;\\n    display: flex;\\n    align-items: center;\\n    font-size: 12px;\\n    padding: 3px 10px;\\n    border: 1px solid rgba(27,31,35,.2);\\n    border-radius: 3px;\\n    background-image: linear-gradient(-180deg,#fafbfc,#eff3f6 90%);\\n    margin-left: 4px;\\n    font-weight: 600;\\n    font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;\\n  }\\n\\n  .github-star-badge[_ngcontent-%COMP%]:hover {\\n    background-image: linear-gradient(-180deg,#f0f3f6,#e6ebf1 90%);\\n    border-color: rgba(27,31,35,.35);\\n    background-position: -.5em;\\n  }\\n\\n  .github-star-badge[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%] {\\n    height: 16px;\\n    width: 16px;\\n    margin-right: 4px;\\n  }\\n\\n  svg#clouds[_ngcontent-%COMP%] {\\n    position: fixed;\\n    bottom: -160px;\\n    left: -230px;\\n    z-index: -10;\\n    width: 1920px;\\n  }\\n\\n\\n  \\n  @media screen and (max-width: 767px) {\\n\\n    .card-container[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%]:not(.circle-link), .terminal[_ngcontent-%COMP%] {\\n      width: 100%;\\n    }\\n\\n    .card[_ngcontent-%COMP%]:not(.highlight-card) {\\n      height: 16px;\\n      margin: 8px 0;\\n    }\\n\\n    .card.highlight-card[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n      margin-left: 72px;\\n    }\\n\\n    svg#rocket-smoke[_ngcontent-%COMP%] {\\n      right: 120px;\\n      transform: rotate(-5deg);\\n    }\\n  }\\n\\n  @media screen and (max-width: 575px) {\\n    svg#rocket-smoke[_ngcontent-%COMP%] {\\n      display: none;\\n      visibility: hidden;\\n    }\\n  }\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}