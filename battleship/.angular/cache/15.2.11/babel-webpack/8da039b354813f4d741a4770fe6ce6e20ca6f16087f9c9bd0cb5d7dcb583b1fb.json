{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction GameBoardComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"click\", function GameBoardComponent_div_4_div_1_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const colIndex_r5 = restoredCtx.index;\n      const rowIndex_r2 = i0.ɵɵnextContext().index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.handleCellClick(rowIndex_r2, colIndex_r5));\n    })(\"dragover\", function GameBoardComponent_div_4_div_1_Template_div_dragover_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.handleDragOver($event));\n    })(\"drop\", function GameBoardComponent_div_4_div_1_Template_div_drop_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const colIndex_r5 = restoredCtx.index;\n      const rowIndex_r2 = i0.ɵɵnextContext().index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.handleDrop($event, rowIndex_r2, colIndex_r5));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cell_r4 = ctx.$implicit;\n    i0.ɵɵclassProp(\"hit\", cell_r4 === \"H\")(\"miss\", cell_r4 === \"M\")(\"sunken\", cell_r4 === \"S\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cell_r4, \" \");\n  }\n}\nfunction GameBoardComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, GameBoardComponent_div_4_div_1_Template, 2, 7, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r1);\n  }\n}\nexport let GameBoardComponent = /*#__PURE__*/(() => {\n  class GameBoardComponent {\n    constructor() {\n      this.board = [];\n      this.boardSize = 7; // Default to 7x7 board\n      this.isPlayerBoard = false;\n      this.cellClick = new EventEmitter();\n      this.shipDropped = new EventEmitter();\n    }\n    ngOnInit() {\n      if (this.board.length === 0) {\n        this.initializeBoard();\n      }\n    }\n    initializeBoard() {\n      this.board = Array.from({\n        length: this.boardSize\n      }, () => Array(this.boardSize).fill(''));\n    }\n    handleCellClick(row, col) {\n      this.cellClick.emit({\n        row,\n        col\n      });\n    }\n    handleDragOver(event) {\n      event.preventDefault();\n    }\n    handleDrop(event, row, col) {\n      var _a;\n      event.preventDefault();\n      const ship = (_a = event.dataTransfer) === null || _a === void 0 ? void 0 : _a.getData('text');\n      if (ship) {\n        this.shipDropped.emit({\n          row,\n          col,\n          ship\n        });\n      }\n    }\n  }\n  GameBoardComponent.ɵfac = function GameBoardComponent_Factory(t) {\n    return new (t || GameBoardComponent)();\n  };\n  GameBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameBoardComponent,\n    selectors: [[\"app-game-board\"]],\n    inputs: {\n      board: \"board\",\n      boardSize: \"boardSize\",\n      isPlayerBoard: \"isPlayerBoard\"\n    },\n    outputs: {\n      cellClick: \"cellClick\",\n      shipDropped: \"shipDropped\"\n    },\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"game-board\"], [1, \"grid\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [\"class\", \"cell\", 3, \"hit\", \"miss\", \"sunken\", \"click\", \"dragover\", \"drop\", 4, \"ngFor\", \"ngForOf\"], [1, \"cell\", 3, \"click\", \"dragover\", \"drop\"]],\n    template: function GameBoardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Game Board\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵtemplate(4, GameBoardComponent_div_4_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.board);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\".game-board[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;gap:20px}.grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(var(--board-size, 7),30px);grid-template-rows:repeat(var(--board-size, 7),30px);gap:2px}.row[_ngcontent-%COMP%]{display:contents}.cell[_ngcontent-%COMP%]{width:30px;height:30px;display:flex;align-items:center;justify-content:center;border:1px solid #000;background-color:#f0f0f0;cursor:pointer}.cell[_ngcontent-%COMP%]:hover{background-color:#ddd}.cell.marked[_ngcontent-%COMP%], .cell.hit[_ngcontent-%COMP%]{background-color:red;color:#fff}.cell.miss[_ngcontent-%COMP%]{background-color:#add8e6;color:#000}.cell.sunken[_ngcontent-%COMP%]{background-color:#8b0000;color:#fff}\"]\n  });\n  return GameBoardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}